
#include<stdio.h>
#include<stdlib.h>
#include<time.h>
#include<Windows.h>
#include<string.h>

int main(void)
{
	int random;
	int lock = 0;
	/*□  ■*/

	const char *a0[10];//0줄
	a0[0] = "  ";
	a0[1] = "  ";
	a0[2] = "  ";
	a0[3] = "  ";
	a0[4] = "  ";
	a0[5] = "  ";
	a0[6] = "  ";
	a0[7] = "  ";
	a0[8] = "  ";
	a0[9] = "  ";

	const char *a1[10];//1줄
	a1[0] = "  ";
	a1[1] = "  ";
	a1[2] = "  ";
	a1[3] = "  ";
	a1[4] = "  ";
	a1[5] = "  ";
	a1[6] = "  ";
	a1[7] = "  ";
	a1[8] = "  ";
	a1[9] = "  ";

	const char* a2[10];//2줄
	a2[0] = "  ";
	a2[1] = "  ";
	a2[2] = "  ";
	a2[3] = "  ";
	a2[4] = "  ";
	a2[5] = "  ";
	a2[6] = "  ";
	a2[7] = "  ";
	a2[8] = "  ";
	a2[9] = "  ";

	const char* a3[10];//3줄
	a3[0] = "  ";
	a3[1] = "  ";
	a3[2] = "  ";
	a3[3] = "  ";
	a3[4] = "  ";
	a3[5] = "  ";
	a3[6] = "  ";
	a3[7] = "  ";
	a3[8] = "  ";
	a3[9] = "  ";

	const char* a4[10];//4줄
	a4[0] = "  ";
	a4[1] = "  ";
	a4[2] = "  ";
	a4[3] = "  ";
	a4[4] = "  ";
	a4[5] = "  ";
	a4[6] = "  ";
	a4[7] = "  ";
	a4[8] = "  ";
	a4[9] = "  ";

	const char* a5[10];//5줄
	a5[0] = "  ";
	a5[1] = "  ";
	a5[2] = "  ";
	a5[3] = "  ";
	a5[4] = "  ";
	a5[5] = "  ";
	a5[6] = "  ";
	a5[7] = "  ";
	a5[8] = "  ";
	a5[9] = "  ";


	const char* a6[10];//6줄
	a6[0] = "  ";
	a6[1] = "  ";
	a6[2] = "  ";
	a6[3] = "  ";
	a6[4] = "  ";
	a6[5] = "  ";
	a6[6] = "  ";
	a6[7] = "  ";
	a6[8] = "  ";
	a6[9] = "  ";


	const char* a7[10];//7줄
	a7[0] = "  ";
	a7[1] = "  ";
	a7[2] = "  ";
	a7[3] = "  ";
	a7[4] = "  ";
	a7[5] = "  ";
	a7[6] = "  ";
	a7[7] = "  ";
	a7[8] = "  ";
	a7[9] = "  ";


	const char* a8[10];//8줄
	a8[0] = "  ";
	a8[1] = "  ";
	a8[2] = "  ";
	a8[3] = "  ";
	a8[4] = "  ";
	a8[5] = "  ";
	a8[6] = "  ";
	a8[7] = "  ";
	a8[8] = "  ";
	a8[9] = "  ";


	const char* a9[10];//9줄
	a9[0] = "  ";
	a9[1] = "  ";
	a9[2] = "  ";
	a9[3] = "  ";
	a9[4] = "  ";
	a9[5] = "  ";
	a9[6] = "  ";
	a9[7] = "  ";
	a9[8] = "  ";
	a9[9] = "  ";


	const char* a10[10];//10줄
	a10[0] = "  ";
	a10[1] = "  ";
	a10[2] = "  ";
	a10[3] = "  ";
	a10[4] = "  ";
	a10[5] = "  ";
	a10[6] = "  ";
	a10[7] = "  ";
	a10[8] = "  ";
	a10[9] = "  ";


	const char* a11[10];//11줄
	a11[0] = "  ";
	a11[1] = "  ";
	a11[2] = "  ";
	a11[3] = "  ";
	a11[4] = "  ";
	a11[5] = "  ";
	a11[6] = "  ";
	a11[7] = "  ";
	a11[8] = "  ";
	a11[9] = "  ";


	const char* a12[10];//12줄
	a12[0] = "  ";
	a12[1] = "  ";
	a12[2] = "  ";
	a12[3] = "  ";
	a12[4] = "  ";
	a12[5] = "  ";
	a12[6] = "  ";
	a12[7] = "  ";
	a12[8] = "  ";
	a12[9] = "  ";


	const char* a13[10];//13줄
	a13[0] = "  ";
	a13[1] = "  ";
	a13[2] = "  ";
	a13[3] = "  ";
	a13[4] = "  ";
	a13[5] = "  ";
	a13[6] = "  ";
	a13[7] = "  ";
	a13[8] = "  ";
	a13[9] = "  ";


	const char* a14[10];//14줄
	a14[0] = "  ";
	a14[1] = "  ";
	a14[2] = "  ";
	a14[3] = "  ";
	a14[4] = "  ";
	a14[5] = "  ";
	a14[6] = "  ";
	a14[7] = "  ";
	a14[8] = "  ";
	a14[9] = "  ";



	while (1) {
		srand(time(NULL));//랜덤값 초기화
		random = rand() % 5 + 1;//1~5 5종류 도형 1:일자, 2:사각, 3: 31끝, 4: 31중간, 5: 22



		if (lock == 0) {//랜덤값에 따른 도형 생성
			if (random == 1) {
				a1[5] = "□";
				a2[5] = "□";
				a3[5] = "□";
				a4[5] = "□";
			}
			else if (random == 2) {
				a1[4] = "□";
				a1[5] = "□";
				a2[4] = "□";
				a2[5] = "□";
			}
			else if (random == 3) {
				a1[4] = "□";
				a1[5] = "□";
				a1[6] = "□";
				a2[4] = "□";
			}
			else if (random == 4) {
				a1[5] = "□";
				a2[4] = "□";
				a2[5] = "□";
				a2[6] = "□";
			}
			else if (random == 5) {
				a1[5] = "□";
				a1[6] = "□";
				a2[4] = "□";
				a2[5] = "□";
			}
		}



		system("cls");//화면 지우기
		printf("\n\n\n\n\n");//게임 창
		printf("						  %s%s%s%s%s%s%s%s%s%s  \n", a0[0], a0[1], a0[2], a0[3], a0[4], a0[5], a0[6], a0[7], a0[8], a0[9]);//0줄
		printf("						  %s%s%s%s%s%s%s%s%s%s  \n", a1[0], a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);//1줄
		printf("						■%s%s%s%s%s%s%s%s%s%s■\n", a2[0], a2[1], a2[2], a2[3], a2[4], a2[5], a2[6], a2[7], a2[8], a2[9]);//2줄
		printf("						■%s%s%s%s%s%s%s%s%s%s■\n", a3[0], a3[1], a3[2], a3[3], a3[4], a3[5], a3[6], a3[7], a3[8], a3[9]);//3줄
		printf("						■%s%s%s%s%s%s%s%s%s%s■\n", a4[0], a4[1], a4[2], a4[3], a4[4], a4[5], a4[6], a4[7], a4[8], a4[9]);//4줄
		printf("						■%s%s%s%s%s%s%s%s%s%s■\n", a5[0], a5[1], a5[2], a5[3], a5[4], a5[5], a5[6], a5[7], a5[8], a5[9]);//5줄
		printf("						■%s%s%s%s%s%s%s%s%s%s■\n", a6[0], a6[1], a6[2], a6[3], a6[4], a6[5], a6[6], a6[7], a6[8], a6[9]);//6줄
		printf("						■%s%s%s%s%s%s%s%s%s%s■\n", a7[0], a7[1], a7[2], a7[3], a7[4], a7[5], a7[6], a7[7], a7[8], a7[9]);//7줄
		printf("						■%s%s%s%s%s%s%s%s%s%s■\n", a8[0], a8[1], a8[2], a8[3], a8[4], a8[5], a8[6], a8[7], a8[8], a8[9]);//8줄
		printf("						■%s%s%s%s%s%s%s%s%s%s■\n", a9[0], a9[1], a9[2], a9[3], a9[4], a9[5], a9[6], a9[7], a9[8], a9[9]);//9줄
		printf("						■%s%s%s%s%s%s%s%s%s%s■\n", a10[0], a10[1], a10[2], a10[3], a10[4], a10[5], a10[6], a10[7], a10[8], a10[9]);//10줄
		printf("						■%s%s%s%s%s%s%s%s%s%s■\n", a11[0], a11[1], a11[2], a11[3], a11[4], a11[5], a11[6], a11[7], a11[8], a11[9]);//11줄
		printf("						■%s%s%s%s%s%s%s%s%s%s■\n", a12[0], a12[1], a12[2], a12[3], a12[4], a12[5], a12[6], a12[7], a12[8], a12[9]);//12줄
		printf("						■%s%s%s%s%s%s%s%s%s%s■\n", a13[0], a13[1], a13[2], a13[3], a13[4], a13[5], a13[6], a13[7], a13[8], a13[9]);//13줄
		printf("						■%s%s%s%s%s%s%s%s%s%s■\n", a14[0], a14[1], a14[2], a14[3], a14[4], a14[5], a14[6], a14[7], a14[8], a14[9]);//14줄
		printf("						■■■■■■■■■■■■\n %d", random);//바닥 줄

		


		if (GetAsyncKeyState(VK_LEFT)) {//방향키 입력
			printf("왼쪽");
		}
		if (GetAsyncKeyState(VK_RIGHT)) {
			printf("오른쪽");
		}
		if (GetAsyncKeyState(VK_UP)) {
			printf("위쪽");
		}
		if (GetAsyncKeyState(VK_DOWN)) {
			printf("아래쪽");
		}


		a14[0] = a13[0];
		a14[1] = a13[1];
		a14[2] = a13[2];
		a14[3] = a13[3];
		a14[4] = a13[4];
		a14[5] = a13[5];
		a14[6] = a13[6];
		a14[7] = a13[7];
		a14[8] = a13[8];
		a14[9] = a13[9];

		a13[0] = a12[0];
		a13[1] = a12[1];
		a13[2] = a12[2];
		a13[3] = a12[3];
		a13[4] = a12[4];
		a13[5] = a12[5];
		a13[6] = a12[6];
		a13[7] = a12[7];
		a13[8] = a12[8];
		a13[9] = a12[9];

		a12[0] = a11[0];
		a12[1] = a11[1];
		a12[2] = a11[2];
		a12[3] = a11[3];
		a12[4] = a11[4];
		a12[5] = a11[5];
		a12[6] = a11[6];
		a12[7] = a11[7];
		a12[8] = a11[8];
		a12[9] = a11[9];

		a11[0] = a10[0];
		a11[1] = a10[1];
		a11[2] = a10[2];
		a11[3] = a10[3];
		a11[4] = a10[4];
		a11[5] = a10[5];
		a11[6] = a10[6];
		a11[7] = a10[7];
		a11[8] = a10[8];
		a11[9] = a10[9];

		a10[0] = a9[0];
		a10[1] = a9[1];
		a10[2] = a9[2];
		a10[3] = a9[3];
		a10[4] = a9[4];
		a10[5] = a9[5];
		a10[6] = a9[6];
		a10[7] = a9[7];
		a10[8] = a9[8];
		a10[9] = a9[9];

		a9[0] = a8[0];
		a9[1] = a8[1];
		a9[2] = a8[2];
		a9[3] = a8[3];
		a9[4] = a8[4];
		a9[5] = a8[5];
		a9[6] = a8[6];
		a9[7] = a8[7];
		a9[8] = a8[8];
		a9[9] = a8[9];

		a8[0] = a7[0];
		a8[1] = a7[1];
		a8[2] = a7[2];
		a8[3] = a7[3];
		a8[4] = a7[4];
		a8[5] = a7[5];
		a8[6] = a7[6];
		a8[7] = a7[7];
		a8[8] = a7[8];
		a8[9] = a7[9];

		
		a7[0] = a6[0];
		a7[1] = a6[1];
		a7[2] = a6[2];
		a7[3] = a6[3];
		a7[4] = a6[4];
		a7[5] = a6[5];
		a7[6] = a6[6];
		a7[7] = a6[7];
		a7[8] = a6[8];
		a7[9] = a6[9];

		a6[0] = a5[0];
		a6[1] = a5[1];
		a6[2] = a5[2];
		a6[3] = a5[3];
		a6[4] = a5[4];
		a6[5] = a5[5];
		a6[6] = a5[6];
		a6[7] = a5[7];
		a6[8] = a5[8];
		a6[9] = a5[9];

		a5[0] = a4[0];
		a5[1] = a4[1];
		a5[2] = a4[2];
		a5[3] = a4[3];
		a5[4] = a4[4];
		a5[5] = a4[5];
		a5[6] = a4[6];
		a5[7] = a4[7];
		a5[8] = a4[8];
		a5[9] = a4[9];

		a4[0] = a3[0];
		a4[1] = a3[1];
		a4[2] = a3[2];
		a4[3] = a3[3];
		a4[4] = a3[4];
		a4[5] = a3[5];
		a4[6] = a3[6];
		a4[7] = a3[7];
		a4[8] = a3[8];
		a4[9] = a3[9];

		a3[0] = a2[0];
		a3[1] = a2[1];
		a3[2] = a2[2];
		a3[3] = a2[3];
		a3[4] = a2[4];
		a3[5] = a2[5];
		a3[6] = a2[6];
		a3[7] = a2[7];
		a3[8] = a2[8];
		a3[9] = a2[9];

		a2[0] = a1[0];
		a2[1] = a1[1];
		a2[2] = a1[2];
		a2[3] = a1[3];
		a2[4] = a1[4];
		a2[5] = a1[5];
		a2[6] = a1[6];
		a2[7] = a1[7];
		a2[8] = a1[8];
		a2[9] = a1[9];

		a1[0] = a0[0];
		a1[1] = a0[1];
		a1[2] = a0[2];
		a1[3] = a0[3];
		a1[4] = a0[4];
		a1[5] = a0[5];
		a1[6] = a0[6];
		a1[7] = a0[7];
		a1[8] = a0[8];
		a1[9] = a0[9];










		lock = 1;//다음 도형 안 나오게 잠금
		Sleep(500);//0.5초 지연


	}
		return 0;
	
}
